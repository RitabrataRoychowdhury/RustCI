name: "Multi-Environment Deploy"
description: "Deploy to staging and production environments"
triggers:
  - trigger_type: manual
    config: {}

stages:
  - name: "Build"
    steps:
      - name: "build-application"
        step_type: shell
        config:
          command: |
            cargo build --release && \
            docker build -t rustci-app:${BUILD_ID:-latest} .
            
  - name: "Deploy to Staging"
    steps:
      - name: "deploy-staging"
        step_type: shell
        config:
          deployment_type: custom
          command: |
            docker rm -f rustci-staging || true && \
            docker run -d --name rustci-staging -p 8081:8000 \
            -e RUST_ENV=staging \
            -e MONGODB_URI=${STAGING_MONGODB_URI} \
            -e MONGODB_DATABASE=${STAGING_DATABASE} \
            -e JWT_SECRET=${STAGING_JWT_SECRET} \
            -e PORT=8000 \
            rustci-app:${BUILD_ID:-latest}
            
      - name: "verify-staging"
        step_type: shell
        config:
          command: |
            sleep 15 && \
            curl -f http://localhost:8081/health && \
            echo "Staging deployment verified"
            
      - name: "run-smoke-tests"
        step_type: shell
        config:
          command: |
            curl -f http://localhost:8081/api/health && \
            curl -f http://localhost:8081/api/info
            
  - name: "Deploy to Production"
    steps:
      - name: "production-approval"
        step_type: manual_approval
        config:
          message: "Approve production deployment?"
          timeout: 3600
          
      - name: "deploy-production"
        step_type: shell
        config:
          deployment_type: custom
          command: |
            docker rm -f rustci-production || true && \
            docker run -d --name rustci-production -p 8080:8000 \
            -e RUST_ENV=production \
            -e MONGODB_URI=${PRODUCTION_MONGODB_URI} \
            -e MONGODB_DATABASE=${PRODUCTION_DATABASE} \
            -e JWT_SECRET=${PRODUCTION_JWT_SECRET} \
            -e PORT=8000 \
            rustci-app:${BUILD_ID:-latest}
            
      - name: "verify-production"
        step_type: shell
        config:
          command: |
            sleep 15 && \
            curl -f http://localhost:8080/health && \
            echo "Production deployment verified"
            
      - name: "cleanup-staging"
        step_type: shell
        config:
          command: |
            docker rm -f rustci-staging || true

environment:
  BUILD_ID: "${PIPELINE_ID}"
timeout: 3600
retry_count: 0