name: "Backup and Restore"
description: "Database backup and restore operations"
triggers:
  - trigger_type: manual
    config: {}
  - trigger_type: scheduled
    config:
      cron: "0 3 * * *"  # Daily at 3 AM

stages:
  - name: "Backup Operations"
    steps:
      - name: "create-backup-directory"
        step_type: shell
        config:
          command: |
            mkdir -p backups/$(date +%Y/%m/%d) && \
            export BACKUP_DIR="backups/$(date +%Y/%m/%d)/$(date +%H%M%S)"
            
      - name: "backup-mongodb"
        step_type: shell
        config:
          command: |
            BACKUP_DIR="backups/$(date +%Y/%m/%d)/$(date +%H%M%S)" && \
            mkdir -p "$BACKUP_DIR" && \
            mongodump --uri="${MONGODB_URI}" --db="${MONGODB_DATABASE}" \
            --out="$BACKUP_DIR/mongodb" && \
            echo "MongoDB backup completed: $BACKUP_DIR"
            
      - name: "backup-application-config"
        step_type: shell
        config:
          command: |
            BACKUP_DIR="backups/$(date +%Y/%m/%d)/$(date +%H%M%S)" && \
            cp -r config/ "$BACKUP_DIR/config/" && \
            cp .env "$BACKUP_DIR/env-backup" && \
            echo "Config backup completed"
            
      - name: "compress-backup"
        step_type: shell
        config:
          command: |
            BACKUP_DIR="backups/$(date +%Y/%m/%d)/$(date +%H%M%S)" && \
            tar -czf "$BACKUP_DIR.tar.gz" -C "$(dirname "$BACKUP_DIR")" "$(basename "$BACKUP_DIR")" && \
            rm -rf "$BACKUP_DIR" && \
            echo "Backup compressed: $BACKUP_DIR.tar.gz"
            
      - name: "upload-to-storage"
        step_type: shell
        config:
          deployment_type: custom
          command: |
            BACKUP_FILE="backups/$(date +%Y/%m/%d)/$(date +%H%M%S).tar.gz" && \
            aws s3 cp "$BACKUP_FILE" "s3://${BACKUP_BUCKET}/rustci-backups/" || \
            echo "S3 upload failed, backup stored locally: $BACKUP_FILE"
            
      - name: "cleanup-old-backups"
        step_type: shell
        config:
          command: |
            find backups/ -name "*.tar.gz" -mtime +30 -delete && \
            echo "Old backups cleaned up"
            
  - name: "Restore Operations"
    steps:
      - name: "restore-from-backup"
        step_type: shell
        config:
          command: |
            if [ -n "${RESTORE_FILE}" ]; then
              echo "Restoring from: ${RESTORE_FILE}"
              tar -xzf "${RESTORE_FILE}" -C /tmp/
              RESTORE_DIR=$(tar -tzf "${RESTORE_FILE}" | head -1 | cut -f1 -d"/")
              mongorestore --uri="${MONGODB_URI}" --db="${MONGODB_DATABASE}" \
              --drop "/tmp/$RESTORE_DIR/mongodb/${MONGODB_DATABASE}/"
              echo "Restore completed"
            else
              echo "No restore file specified, skipping restore"
            fi

environment:
  BACKUP_BUCKET: "rustci-backups"
  RESTORE_FILE: ""  # Set this to restore from specific backup
timeout: 3600
retry_count: 0