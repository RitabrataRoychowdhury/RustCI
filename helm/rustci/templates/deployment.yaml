apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rustci.fullname" . }}
  labels:
    {{- include "rustci.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rustci.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rustci.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rustci.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.secrets.create }}
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "rustci.fullname" . }}-secrets
                  key: mongodb_uri
                  optional: true
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "rustci.fullname" . }}-secrets
                  key: jwt_secret
                  optional: true
            - name: GITHUB_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "rustci.fullname" . }}-secrets
                  key: github_oauth_client_secret
                  optional: true
            {{- end }}
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
            successThreshold: {{ .Values.healthCheck.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: rustci-storage
              mountPath: /app/data
            {{- end }}
            {{- if .Values.cicd.workspace }}
            - name: workspace-storage
              mountPath: /tmp/ci-workspaces
            {{- end }}
            {{- if .Values.cicd.cache }}
            - name: cache-storage
              mountPath: /tmp/ci-cache
            {{- end }}
            {{- if .Values.cicd.docker.enabled }}
            - name: docker-socket
              mountPath: /var/run/docker.sock
              readOnly: true
            {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: rustci-storage
          persistentVolumeClaim:
            claimName: {{ include "rustci.fullname" . }}-pvc
        {{- end }}
        {{- if .Values.cicd.workspace }}
        - name: workspace-storage
          persistentVolumeClaim:
            claimName: {{ include "rustci.fullname" . }}-workspace-pvc
        {{- end }}
        {{- if .Values.cicd.cache }}
        - name: cache-storage
          persistentVolumeClaim:
            claimName: {{ include "rustci.fullname" . }}-cache-pvc
        {{- end }}
        {{- if .Values.cicd.docker.enabled }}
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            type: Socket
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}