[package]
name = "RustAutoDevOps"
version = "0.1.0"
edition = "2021"
default-run = "RustAutoDevOps"

[[bin]]
name = "valkyrie-config"
path = "src/bin/valkyrie-config.rs"

[dependencies]
# Web framework
axum = { version = "0.7", features = ["http1", "http2", "macros", "multipart"] }
tokio = { version = "1.45", features = ["full"] }

# Middleware + Layers
tower = { version = "0.4", features = ["util", "timeout"] }
tower-http = { version = "0.5", features = ["cors", "trace", "compression-gzip"] }

# HTTP client – Rustls for TLS (musl-compatible)
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = "0.8"

# Config and environment
dotenv = "0.15"
uuid = { version = "1.0", features = ["v4", "serde"] }
url = "2.5"

# Date/time
chrono = { version = "0.4", features = ["serde"] }

# Auth
jsonwebtoken = "9.2"
argon2 = "0.5"
base64ct = "1.7"

# Encryption and cryptography
aes-gcm = "0.10"
chacha20poly1305 = "0.10"
rand = "0.8"
rand_chacha = "0.3"
sha2 = "0.10"
hex = "0.4"
base64 = "0.21"

# Docker integration
bollard = "0.16"
tempfile = "3.20"

# Configuration and validation
regex = "1.11"
tar = "0.4"
num_cpus = "1.17"  # Used in lockfree implementations

# Kubernetes integration
kube = { version = "0.87", features = ["runtime", "derive"] }
k8s-openapi = { version = "0.20", features = ["v1_28"] }

# Async support & logging
async-trait = "0.1"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "chrono", "json"] }

# Observability and metrics
metrics = "0.21"
metrics-exporter-prometheus = "0.12"
opentelemetry = { version = "0.20", features = ["rt-tokio"] }
opentelemetry-jaeger = { version = "0.19", features = ["rt-tokio"] }
tracing-opentelemetry = "0.21"

# Performance and caching
moka = { version = "0.12", features = ["future"] }
dashmap = "5.5"

# Health checks and monitoring
sysinfo = "0.29"
urlencoding = "2.1"
time = "0.3"

# System utilities
hostname = "0.3"
anyhow = "1.0"
thiserror = "1.0"

# Database – MongoDB using Tokio runtime with default rustls TLS support
mongodb = { version = "2.8", features = ["tokio-runtime"] }

# Streams & extras
tokio-stream = "0.1"
tokio-util = "0.7"
futures = "0.3"
futures-util = "0.3"
axum-extra = { version = "0.9", features = ["cookie"] }



# OpenAPI/Swagger documentation
utoipa = { version = "4.2", features = ["axum_extras", "chrono", "uuid"] }
utoipa-swagger-ui = { version = "4.0", features = ["axum"] }

# Performance optimizations
bytes = "1.5"

# Random number generation (used in lockfree implementations)
fastrand = "2.3"

# Data structures for high-performance routing
smallvec = "1.11"
lru = "0.12"

# Fuzzy matching for service discovery
nucleo = "0.2"

# Performance benchmarking and testing
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"

# SIMD and zero-copy optimizations (used in valkyrie)
wide = "0.7"
bytemuck = { version = "1.14", features = ["derive"] }
memmap2 = "0.9"
simd-json = "0.13"  # Used in SIMD processor

# File watching for hot-reload
notify = "6.1"

# WebSocket support for node communication
tokio-tungstenite = { version = "0.20", features = ["native-tls"] }

# Compression support
flate2 = "1.0"
lz4_flex = "0.11"
bincode = "1.3"

# Language bindings dependencies (optional)
pyo3 = { version = "0.20", features = ["extension-module"], optional = true }
napi = { version = "2.0", optional = true }
napi-derive = { version = "2.0", optional = true }
jni = { version = "0.21", optional = true }

# CLI argument parsing (used in valkyrie-codegen binary)
clap = { version = "4.0", features = ["derive"] }
colored = "2.0"
humantime-serde = "1.1.1"

[[bench]]
name = "fit_benchmarks"
harness = false

[[bench]]
name = "cra_benchmarks"
harness = false

[dev-dependencies]
# Testing framework
tokio-test = "0.4"
mockall = "0.11"
wiremock = "0.5"
testcontainers = "0.16"

# Test utilities
proptest = "1.7"
quickcheck = "1.0"
quickcheck_macros = "1.1"

# HTTP testing
httpmock = "0.6"

# Additional test dependencies
md5 = "0.7"
tempdir = "0.3"

# Optional features for language bindings
[features]
default = ["core-features"]
core-features = []
python-bindings = ["pyo3"]
javascript-bindings = ["napi", "napi-derive"]
java-bindings = ["jni"]
go-bindings = []
all-bindings = ["python-bindings", "javascript-bindings", "go-bindings"]
# Performance features
simd-optimizations = []
zero-copy = []
opentelemetry = []
gzip = []

[profile.release]
opt-level = 3          # Optimize for speed instead of size
lto = "thin"           # Use thin LTO for faster builds
codegen-units = 16     # Increase parallelism for faster builds
panic = "abort"
strip = true

# Development profile optimizations for faster builds
[profile.dev]
opt-level = 0
debug = true
split-debuginfo = "unpacked"  # Faster linking on macOS
incremental = true

# Test profile optimizations
[profile.test]
opt-level = 0
debug = true
incremental = true
