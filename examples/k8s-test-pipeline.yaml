name: "Kubernetes Connector Test Suite"
description: "Comprehensive test suite for Kubernetes connector functionality"

triggers:
  - trigger_type: manual
    config: {}

stages:
  - name: "Basic Kubernetes Tests"
    steps:
      - name: "simple-alpine-job"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          command: "echo 'Hello from Alpine on Kubernetes!' && date && sleep 5"
          namespace: "default"
        timeout: 120

      - name: "ubuntu-with-script"
        step_type: kubernetes
        config:
          image: "ubuntu:latest"
          script: |
            echo "=== System Information ==="
            uname -a
            echo "=== Available Resources ==="
            free -h
            echo "=== CPU Information ==="
            nproc
            echo "=== Environment Variables ==="
            env | grep -E "(KUBERNETES|POD|SERVICE)" | sort
            echo "=== Test Completed ==="
          namespace: "default"
        timeout: 180

  - name: "Resource Management Tests"
    steps:
      - name: "resource-limited-job"
        step_type: kubernetes
        config:
          image: "ubuntu:latest"
          script: |
            echo "Testing resource limits..."
            echo "Memory limit test:"
            free -h
            echo "CPU limit test:"
            nproc
            echo "Running memory stress test (limited):"
            dd if=/dev/zero of=/tmp/test bs=1M count=50 2>/dev/null || echo "Memory limit enforced"
            rm -f /tmp/test
            echo "Resource test completed"
          namespace: "default"
          parameters:
            resource_requests:
              cpu: "100m"
              memory: "128Mi"
            resource_limits:
              cpu: "200m"
              memory: "256Mi"
        timeout: 300

      - name: "high-resource-job"
        step_type: kubernetes
        config:
          image: "ubuntu:latest"
          script: |
            echo "High resource job starting..."
            echo "Available resources:"
            free -h
            nproc
            echo "Simulating CPU intensive task:"
            timeout 10s yes > /dev/null || echo "CPU test completed"
            echo "High resource job completed"
          namespace: "default"
          parameters:
            resource_requests:
              cpu: "500m"
              memory: "512Mi"
            resource_limits:
              cpu: "1000m"
              memory: "1Gi"
        timeout: 300

  - name: "Storage Tests"
    steps:
      - name: "hostpath-storage-test"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          script: |
            echo "Testing hostPath storage..."
            echo "Creating test file in workspace:"
            echo "Hello from Kubernetes hostPath!" > /workspace/k8s-test.txt
            echo "File created:"
            ls -la /workspace/
            echo "File content:"
            cat /workspace/k8s-test.txt
            echo "Storage test completed"
          namespace: "default"
          parameters:
            use_hostpath: true
        timeout: 180

      - name: "pvc-storage-test"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          script: |
            echo "Testing PVC storage..."
            echo "Checking mounted PVC:"
            df -h /workspace
            echo "Creating test data:"
            echo "PVC test data - $(date)" > /workspace/pvc-test.txt
            echo "Listing workspace contents:"
            ls -la /workspace/
            echo "Reading test data:"
            cat /workspace/pvc-test.txt
            echo "PVC test completed"
          namespace: "default"
          parameters:
            use_pvc: true
            storage_size: "1Gi"
        timeout: 240

  - name: "Advanced Kubernetes Features"
    steps:
      - name: "service-account-test"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          script: |
            echo "Testing service account access..."
            echo "Service account token location:"
            ls -la /var/run/secrets/kubernetes.io/serviceaccount/
            echo "Namespace:"
            cat /var/run/secrets/kubernetes.io/serviceaccount/namespace
            echo "Service account test completed"
          namespace: "default"
          parameters:
            service_account: "default"
        timeout: 120

      - name: "network-connectivity-test"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          script: |
            echo "Testing network connectivity..."
            apk add --no-cache curl
            echo "Testing DNS resolution:"
            nslookup kubernetes.default.svc.cluster.local
            echo "Testing external connectivity:"
            curl -s -o /dev/null -w "%{http_code}" https://httpbin.org/get || echo "External access test"
            echo "Network test completed"
          namespace: "default"
        timeout: 300

  - name: "Error Handling Tests"
    steps:
      - name: "failing-job-test"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          script: |
            echo "This job is designed to fail for testing error handling"
            echo "Simulating failure..."
            exit 1
          namespace: "default"
        continue_on_error: true
        timeout: 60

      - name: "timeout-test"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          script: |
            echo "Testing timeout handling..."
            echo "This job will run longer than timeout"
            sleep 120
            echo "This should not be reached"
          namespace: "default"
        continue_on_error: true
        timeout: 30

      - name: "recovery-test"
        step_type: kubernetes
        config:
          image: "alpine:latest"
          command: "echo 'Recovery test - this should run after failures' && date"
          namespace: "default"
        timeout: 60

  - name: "Multi-Container Scenarios"
    steps:
      - name: "database-simulation"
        step_type: kubernetes
        config:
          image: "postgres:13-alpine"
          script: |
            echo "Simulating database operations..."
            # Note: This is just a simulation, not actually starting PostgreSQL
            echo "Database version: $(postgres --version)"
            echo "Database simulation completed"
          namespace: "default"
          parameters:
            resource_requests:
              cpu: "200m"
              memory: "256Mi"
            resource_limits:
              cpu: "500m"
              memory: "512Mi"
        timeout: 180

      - name: "web-server-simulation"
        step_type: kubernetes
        config:
          image: "nginx:alpine"
          script: |
            echo "Simulating web server operations..."
            nginx -v
            echo "Creating test HTML file:"
            echo "<h1>Hello from Kubernetes!</h1>" > /tmp/index.html
            echo "Web server simulation completed"
          namespace: "default"
        timeout: 120

environment:
  TEST_ENV: "kubernetes"
  CI_PLATFORM: "rustci"
  KUBERNETES_TEST: "true"

timeout: 1800
retry_count: 0